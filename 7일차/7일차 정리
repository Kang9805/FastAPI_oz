Locust로 웹 서비스 성능 테스트 하기
    인터넷을 쓰다보면 너무 느리다고 경험했을 때가 살면서 한번 쯤은 있을 것이다.
    이유는 보통 많은 사람들이 한꺼번에 몰리기 때문!
    Locust는 이런 성능 테스트를 도와 주는 도구 중 하나이다.
    수십, 수백 명의 가상 사용자를 만들어서 웹 서비스에 요청을 보내고 그 결과를 측정할 수 있다.

    1. 테스트 시나리오 만들기 (예시) - "사용자들이 어떤 행동을 할지" 정하는 것
        1) 미팅 생성: 새로운 약속을 만든다.
        2) 날짜 생성: 약속의 날짜를 정한다.
        3) 참가자 추가: 약속에 참가할 사람을 추가
        4) 미팅 조회: 만든 약속 정보 확인
        * 이 시나리오를 python코드로 구현해서 Locust에게 알려주면, 이대로 여러 명의 사용자를 만들어 행동을 반복

    2. 테스트 실행하기 (예시) - 시나리오를 만들었으면 실제로 테스트
        1) 컴퓨터에서 Locust 프로그램 실행

        2) 가상 사용자 설정: Locust 웹 화면에 접속해서 몇 명의 가상 사용자를 데스트에 투입할지 설정
            예시) 10명의 사용자가 1초에 1명씩 천천히 늘어나도록 설정 / 이렇게 하면 서버에 큰 부하 걸리는 것을 방지

    3. 테스트 결과 분석하기 - 테스트가 끝나면 결과 분석해서 문제 찾기 / 이때 중요한 두 가지 지표가 있다!
        1) RPS(Requests Per Second): 1초에 서버가 몇 개 요청을 처리했는지 나타낸다.
        이 숫자가 높을수록 서버가 더 많은 일을 빠르게 처리한다는 뜻이니 좋은 결과!

        2) p95(95th Percentile: 전체 요청의 95%가 이 시간 안에 처리되었다는 의미.
            예시) p95가 100ms라면 100개의 요청 중 95개는 100ms안에 처리 되었다는 뜻, 나머지 5개는 100ms보다 더 걸렸다는 뜻

        * 이것이 대체 왜 중요하냐?
            -> 만약 서버가 100개의 요청 중 99개를 10ms에 처리하고 1개를 5초에 처리했다면 평균 응답 시간은 매우 낮게 나온다.
            하지만 5초를 기다린 사용자는 "이 서비스 진짜 느리잖아?"라고 생각을 할 수도 있다.
            p95는 이런 일부 사용자의 불편함을 숫자로 보여주기 때문에 실제 서비스의 성능을 평가하는데 더 유용하다.

    4. 성능 개선하기: 느린 부분을 빠르게
    성능 테스트를 통해 "참가자 추가" 기능이 가장 느리다는 것을 발견했을때를 가정해보자!

    처음에는 이 기능을 처리하기 위해 여러 번의 작은 작업을 해야했다. 하지만 이 작업들이 꼬이면서 오히려 속도가 느려지는 문제를 겪었다.
    그래서 여러 작업을 단 하나의 큰 작업으로 묶어서 처리하도록 코드를 수정!

    이렇게 코드를 고친 후에 다시 테스트를 해보니, "참가자 추가"기능의 응답 시간이 훨씬 빨라졌고, 전체 서비스 성능도 함께 좋아진 것을 확인!


    <총정리>
    Locust는 웹 서비스의 문제점을 미리 찾고, 해결책을 적용한 후 그 효과를 명확하게 확인하는데 큰 도움이 되는 도구이다.


